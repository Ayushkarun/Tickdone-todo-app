  // Future<void> changepassword(BuildContext context) async {
  //   TextEditingController passwordchange = TextEditingController();
  //   final formKey = GlobalKey<FormState>();
  //   return showDialog(
  //     context: context,
  //     barrierDismissible: true,
  //     builder: (context) {
  //       return Dialog(
  //         backgroundColor: Colors.black,
  //         surfaceTintColor: Colors.transparent,
  //         insetPadding: EdgeInsets.all(20.w),
  //         child: LayoutBuilder(
  //           builder: (context, constraints) {
  //             return SingleChildScrollView(
  //               padding: EdgeInsets.all(16.w),
  //               child: ConstrainedBox(
  //                 constraints: BoxConstraints(
  //                   maxHeight: constraints.maxHeight * 0.6, // Limit height
  //                 ),
  //                 child: Column(
  //                   mainAxisSize: MainAxisSize.min,
  //                   children: [
  //                     Text(
  //                       'Change Password',
  //                       style: TextStyle(
  //                         color: Colors.white,
  //                         fontFamily: 'Poppins',
  //                         fontWeight: FontWeight.bold,
  //                         fontSize: 18.sp,
  //                       ),
  //                     ),
  //                     SizedBox(height: 8.h),
  //                     Text(
  //                       'We will send Password change link in mail',
  //                       style: TextStyle(
  //                         color: Colors.white,
  //                         fontFamily: 'Poppins',
  //                         fontSize: 14.sp,
  //                       ),
  //                     ),
  //                     SizedBox(height: 8.h),
  //                     Form(
  //                       key: formKey,
  //                       child: TextFormField(
  //                         controller: passwordchange,
  //                         style: TextStyle(color: Colors.white),
  //                         decoration: InputDecoration(
  //                           hintText: "Enter your email",
  //                           hintStyle: TextStyle(color: Colors.white70),

  //                           filled: true,
  //                           fillColor: Colors.grey[900],
  //                           border: OutlineInputBorder(
  //                             borderRadius: BorderRadius.circular(10.r),
  //                           ),
  //                         ),
  //                         keyboardType: TextInputType.emailAddress,
  //                       ),
  //                     ),
  //                     SizedBox(height: 12.h),
  //                     ElevatedButton(
  //                       style: ElevatedButton.styleFrom(
  //                         backgroundColor: Color(0xFF10083F),
  //                         foregroundColor: Colors.white,
  //                       ),
  //                       onPressed: () {
  //                         Navigator.pop(context);
  //                       },
  //                       child: Text(
  //                         'Send Reset Link',
  //                         style: TextStyle(
  //                           fontFamily: 'Poppins',
  //                           fontWeight: FontWeight.bold,
  //                         ),
  //                       ),
  //                     ),
  //                   ],
  //                 ),
  //               ),
  //             );
  //           },
  //         ),
  //       );
  //     },
  //   );
  // }


import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:tickdone/Screens/Login/login.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'Aboutus.dart';

class Account extends StatefulWidget {
  const Account({super.key});

  @override
  State<Account> createState() => _AccountState();
}

class _AccountState extends State<Account> {
  
  TextEditingController passwordchange = TextEditingController();

  Future<void> helpalert(BuildContext context) async {
    return showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          backgroundColor: Colors.black,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(15.r),
          ),
          title: Text(
            'Send Feedback?',
            style: TextStyle(
              color: Colors.white,
              fontFamily: 'Poppins',
              fontSize: 20.sp,
            ),
          ),
          content: Column(
            mainAxisSize: MainAxisSize.min,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                'Please Mail us on\n',
                style: TextStyle(color: Colors.white70, fontSize: 14.sp),
              ),
              Text(
                'tickdoneapp@gmail.com',
                style: TextStyle(
                  color: Colors.lightBlueAccent,
                  fontSize: 14.sp,
                ),
              ),
            ],
          ),
          actions: [
            TextButton(
              onPressed: () => Navigator.pop(context),
              child: Text(
                'Ok',
                style: TextStyle(color: Colors.white, fontFamily: 'Poppins'),
              ),
            ),
          ],
        );
      },
    );
  }

  Future<void> changepassword(BuildContext context) async {
    return showDialog(
      context: context,
      barrierDismissible: true,
      builder: (context) {
        return Dialog(
          backgroundColor: Colors.black,
          insetPadding: EdgeInsets.all(20.w),
          child: LayoutBuilder(
            builder: (context, constraints) {
              return SingleChildScrollView(
                padding: EdgeInsets.all(16.w),
                child: ConstrainedBox(
                  constraints: BoxConstraints(
                    maxHeight: constraints.maxHeight * 0.6, // Limit height
                  ),
                  child: Column(
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      Text(
                        'Change Password',
                        style: TextStyle(
                          color: Colors.white,
                          fontFamily: 'Poppins',
                          fontWeight: FontWeight.bold,
                          fontSize: 18.sp,
                        ),
                      ),
                      SizedBox(height: 8.h),
                      Text(
                        'We will send Password reset link in mail',
                        style: TextStyle(
                          color: Colors.white,
                          fontFamily: 'Poppins',
                          fontSize: 14.sp,
                        ),
                      ),
                      SizedBox(height: 8.h),
                      TextFormField(
                        controller: passwordchange,
                        style: TextStyle(color: Colors.white),
                        decoration: InputDecoration(
                          hintText: "Enter your email",
                          hintStyle: TextStyle(color: Colors.white70),
                          filled: true,
                          fillColor: Colors.grey[900],
                          border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(10.r),
                          ),
                        ),
                        keyboardType: TextInputType.emailAddress,
                      ),
                      SizedBox(height: 12.h),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.pop(context);
                        },
                        child: Text('Send Reset Link'),
                      ),
                    ],
                  ),
                ),
              );
            },
          ),
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: LayoutBuilder(
        builder: (context, constraints) {
          return Container(
            color: Colors.black,
            height: constraints.maxHeight,
            width: double.infinity,
            child: SingleChildScrollView(
              // <--- Make whole screen scrollable
              padding: EdgeInsets.only(top: 10.h),
              child: ConstrainedBox(
                constraints: BoxConstraints(minHeight: constraints.maxHeight),
                child: IntrinsicHeight(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Column(
                        children: [
                          Card(
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(20.r),
                            ),
                            elevation: 4,
                            child: Container(
                              decoration: BoxDecoration(
                                gradient: LinearGradient(
                                  colors: [
                                    Color(0xFF10083F),
                                    Color(0xFF2B1B80),
                                    Color(0xFF5C39FF),
                                  ],
                                  begin: Alignment.topLeft,
                                  end: Alignment.bottomRight,
                                ),
                                borderRadius: BorderRadius.circular(20.r),
                              ),
                              child: Padding(
                                padding: EdgeInsets.symmetric(
                                  vertical: 7.h,
                                  horizontal: 25.w,
                                ),
                                child: Column(
                                  children: [
                                    CircleAvatar(
                                      radius: 35.r,
                                      backgroundColor: Colors.white,
                                      child: Icon(
                                        Icons.person,
                                        color: Colors.black,
                                        size: 40.sp,
                                      ),
                                    ),
                                    SizedBox(height: 10.h),
                                    Text(
                                      'Ayush Karun',
                                      style: TextStyle(
                                        color: Colors.white,
                                        fontFamily: 'Poppins',
                                        fontWeight: FontWeight.bold,
                                        fontSize: 24.sp,
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                            ),
                          ),
                          SizedBox(height: 25.h),
                          TextButton.icon(
                            onPressed: () {},
                            icon: Icon(
                              Icons.person,
                              color: Colors.white,
                              size: 24.sp,
                            ),
                            label: Text(
                              'Change Name',
                              style: TextStyle(
                                color: Colors.white,
                                fontSize: 16.sp,
                              ),
                            ),
                          ),
                          TextButton.icon(
                            onPressed: () {
                              changepassword(context);
                            },
                            icon: Icon(
                              Icons.key,
                              color: Colors.white,
                              size: 24.sp,
                            ),
                            label: Text(
                              'Change Password',
                              style: TextStyle(
                                color: Colors.white,
                                fontSize: 16.sp,
                              ),
                            ),
                          ),
                          TextButton.icon(
                            onPressed: () {
                              Navigator.push(
                                context,
                                PageRouteBuilder(
                                  pageBuilder:
                                      (
                                        context,
                                        animation,
                                        secondaryAnimation,
                                      ) => Aboutus(),
                                  transitionsBuilder: (
                                    context,
                                    animation,
                                    secondaryAnimation,
                                    child,
                                  ) {
                                    return FadeTransition(
                                      opacity: animation,
                                      child: child,
                                    );
                                  },
                                ),
                              );
                            },
                            icon: Icon(
                              Icons.info,
                              color: Colors.white,
                              size: 24.sp,
                            ),
                            label: Text(
                              'About Us',
                              style: TextStyle(
                                color: Colors.white,
                                fontSize: 16.sp,
                              ),
                            ),
                          ),
                          TextButton(
                            onPressed: () {
                              helpalert(context);
                            },
                            child: Text(
                              'Help & Feedback',
                              style: TextStyle(
                                color: Colors.white,
                                fontFamily: 'Poppins',
                                fontSize: 16.sp,
                              ),
                            ),
                          ),
                          SizedBox(height: 60.h),
                          TextButton.icon(
                            onPressed: () async {
                              final prefs =
                                  await SharedPreferences.getInstance();
                              await prefs.clear();
                              Navigator.pushAndRemoveUntil(
                                context,
                                PageRouteBuilder(
                                  pageBuilder:
                                      (
                                        context,
                                        animation,
                                        secondaryAnimation,
                                      ) => Loginpage(),
                                  transitionsBuilder: (
                                    context,
                                    animation,
                                    secondaryAnimation,
                                    child,
                                  ) {
                                    return FadeTransition(
                                      opacity: animation,
                                      child: child,
                                    );
                                  },
                                  transitionDuration: Duration(
                                    milliseconds: 500,
                                  ),
                                ),
                                (route) => false,
                              );
                            },
                            icon: Icon(
                              Icons.logout_sharp,
                              color: Colors.red,
                              size: 24.sp,
                            ),
                            label: Text(
                              'Log out',
                              style: TextStyle(
                                color: Colors.red,
                                fontSize: 16.sp,
                              ),
                            ),
                          ),
                          SizedBox(height: 40.h),
                          Text(
                            'Version 1.0.0',
                            style: TextStyle(
                              fontFamily: 'Poppins',
                              fontSize: 10.sp,
                              color: Colors.white60,
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                          Text(
                            'ALL RIGHTS RESERVED',
                            style: TextStyle(
                              fontSize: 8.sp,
                              fontFamily: 'Poppins',
                              color: Colors.white60,
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
              ),
            ),
          );
        },
      ),
    );
  }
}
